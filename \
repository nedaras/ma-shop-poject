package handlers

import (
	"encoding/json"
	"fmt"
	"io"
	"nedas/shop/pkg/utils"
	"net/http"

	"github.com/labstack/echo/v4"
	"github.com/stripe/stripe-go/v79"
	"github.com/stripe/stripe-go/v79/checkout/session"
	"github.com/stripe/stripe-go/v79/webhook"
)

func HandleStripeWebhook(c echo.Context) error {
	payload, err := io.ReadAll(c.Request().Body) // todo: add max bytes
	if err != nil {
		utils.Logger().Error(err)
		return err
	}

	event, err := webhook.ConstructEvent(payload, c.Request().Header.Get("Stripe-Signature"), utils.Getenv("STRIPE_SIGNING_SECRET"))
	if err != nil {
		utils.Logger().Error(err)
		return err
	}

	fmt.Println("type " + event.Type)
	if event.Type == "checkout.session.completed" {
		var session stripe.CheckoutSession
		err := json.Unmarshal(event.Data.Raw, &session)
		if err != nil {
			utils.Logger().Error(err)
			return err
		}

		items := getLineItems(session.ID)

		// smth is null here
		for _, item := range items.Data {
			fmt.Println("ID:", item.ID, "Amount:", item.Quantity)
			fmt.Println("Price:", item.Price.UnitAmount)
		}

	}

	return c.NoContent(http.StatusOK);
}

func getLineItems(id string) *stripe.LineItemList {
	params := &stripe.CheckoutSessionListLineItemsParams{
		Session: stripe.String(id),
	}

	return session.ListLineItems(params).LineItemList();
}
