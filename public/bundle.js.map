{
  "version": 3,
  "sources": ["../src/scripts/AddressCheckbox.ts", "../src/scripts/index.ts", "../src/scripts/bag.ts", "../src/scripts/sneaker.ts", "../src/scripts/address.ts", "../src/scripts/checkout.ts", "../src/scripts/address_selector.ts", "../src/scripts/main.ts"],
  "sourcesContent": ["import { StatusOK } from \"./http\"\n\nexport default class AddressCheckbox extends HTMLElement {\n\n  constructor() {\n    super()\n\n    const checked = () => {\n      return localStorage.getItem(\"default_address\") == null || this.isDefaultAddress()\n    }\n\n    this.innerHTML = `<input id='address-checkbox' type=\\\"checkbox\\\"${checked() ? \" checked\" : \"\"}/>`\n\n    document.body.removeEventListener('htmx:beforeSwap', afterOnLoad)\n    document.body.addEventListener('htmx:beforeSwap', afterOnLoad)\n  }\n  \n  isDefaultAddress() {\n    const defaultAddress = localStorage.getItem(\"default_address\")\n    if (defaultAddress == null) return false\n\n    return defaultAddress === this.getAttribute(\"address\")\n  }\n\n  isChecked() {\n    return (this.querySelector('input') as HTMLInputElement).checked\n  }\n\n}\n\nfunction afterOnLoad(e: CustomEvent<HTMXBeforeSwap>) {\n  if (e.detail.xhr.status != StatusOK) return\n\n  const checkbox = e.detail.elt.querySelector('address-checkbox') as AddressCheckbox | null\n  const address = checkbox?.getAttribute(\"address\")\n\n  if (checkbox && address) {\n    if (checkbox.isChecked()) {\n       localStorage.setItem(\"default_address\", address)\n       return\n    }\n    checkbox.isDefaultAddress() && localStorage.removeItem(\"default_address\")\n  }\n}\n", "import { StatusInternalServerError, StatusNotFound } from \"./http\"\n\ndocument.body.addEventListener('htmx:beforeSwap', (e) => {\n  if (e.detail.pathInfo.requestPath !== '/htmx/search') return\n  switch (e.detail.xhr.status) {\n  case StatusNotFound:\n  case StatusInternalServerError:\n    break\n  default:\n    return\n  }\n  e.detail.isError = false\n  e.detail.shouldSwap = true\n})\n\ndocument.body.addEventListener('htmx:afterSwap', (e) => {\n  if (e.detail.pathInfo.requestPath !== '/htmx/search') return\n\n  const search = document.getElementById('search') as HTMLInputElement\n  const label = search?.nextElementSibling as HTMLLabelElement\n\n  if (!search) return\n  if (!label) return\n\n  function listener() {\n    label.remove()\n    search.removeEventListener('input', listener)\n  }\n\n  search.addEventListener('input', listener)\n})\n", "import { StatusNotFound } from \"./http\"\n\ndocument.body.addEventListener('htmx:beforeSwap', (e) => {\n  if (!e.detail.pathInfo.requestPath.startsWith('/htmx/product')) return\n  switch (e.detail.xhr.status) {\n  case StatusNotFound:\n    break\n  default:\n    return\n  }\n  e.detail.isError = false\n  e.detail.shouldSwap = true\n})\n", "document.body.addEventListener('htmx:beforeSwap', (e) => {\n  if (e.detail.isError) return\n  if (!e.detail.pathInfo.requestPath.startsWith('/htmx/product')) return\n  if (e.detail.serverResponse !== \"\") return\n\n  const placeholder = document.getElementById('placeholder')\n  if (!placeholder) return\n\n  clear(placeholder)\n  e.detail.shouldSwap = false\n})\n\ndocument.addEventListener('click', (e) => {\n  const close = e.target as HTMLElement | null\n  if (close?.id !== \"placeholder-close\") return\n\n  const placeholder = document.getElementById('placeholder')\n  placeholder && clear(placeholder)\n  \n})\n\ndocument.body.addEventListener('htmx:beforeSwap', (e) => {\n  if (e.detail.isError) return\n  if (e.detail.pathInfo.requestPath !== '/bag') return\n\n  const placeholder = document.getElementById('placeholder')\n  if (!placeholder) return\n\n  const div = placeholder.querySelector('div')\n  if (!div) return\n\n  placeholder.style.transitionDuration = '0ms'\n  placeholder.style.transform = ''\n\n  div.innerHTML = ''\n})\n\ndocument.body.addEventListener('htmx:afterSwap', (e) => {\n  if (e.detail.failed) return\n  if (!e.detail.pathInfo.requestPath.startsWith('/htmx/add_to_bag')) return\n\n  const placeholder = document.getElementById('placeholder')\n  if (!placeholder) return\n\n  const images = placeholder.getElementsByTagName('img')\n  if (images.length == 0) return\n\n  let i = 0\n  for (const image of images) {\n    image.onload = () => {\n      if (images.length != ++i) return\n\n      placeholder.style.transitionDuration = ''\n      placeholder.style.transform = 'translateY(0%)'\n      placeholder.onclick = clickHandler(\n        setTimeout(() => clear(placeholder), 2000)\n      )\n\n    }\n  }\n})\n\nfunction clickHandler(timeout: number) {\n  return () => {\n    clearTimeout(timeout)\n  }\n}\n// todo: we would need whole day to sit make that scroll fell right\n\nfunction clear(placeholder: HTMLElement) {\n  placeholder.style.transform = ''\n  setTimeout(() => {\n    const div = placeholder.querySelector('div')\n    div && (div.innerHTML = '')\n  }, 200)\n}\n", "import { StatusInternalServerError, StatusNotFound, StatusTooManyRequests } from \"./http\"\n\ndocument.body.addEventListener('htmx:beforeSwap', (e) => {\n  if (!e.detail.isError) return\n  if (!e.detail.pathInfo.requestPath.startsWith(\"/address/\") && !e.detail.pathInfo.requestPath.startsWith(\"/htmx/address/\")) return\n\n  switch (e.detail.xhr.status) {\n  case StatusNotFound:\n  case StatusTooManyRequests:\n  case StatusInternalServerError:\n    break\n  default:\n    return\n  }\n\n  e.detail.isError = false\n  e.detail.shouldSwap = true\n})\n", "type Product = {\n  tid: string,\n  mid: string,\n  amount: string\n  size: string\n}\n\n// @ts-ignore\nwindow.getProducts = () => {\n  const element = document.getElementById('products') as HTMLUListElement || undefined\n  if (!element) return undefined\n\n  const products: Product[] = []\n  element.querySelectorAll('section').forEach(section => {\n    products.push({\n      tid: section.getAttribute(\"aria-tid\") || \"\",\n      mid: section.getAttribute(\"aria-mid\") || \"\",\n      amount: section.getAttribute(\"aria-amount\") || \"\",\n      size: section.getAttribute(\"aria-size\") || \"\",\n    })\n  })\n\n  if (products.length == 0) {\n    return undefined\n  }\n\n  return JSON.stringify(products) \n}\n", "document.body.addEventListener('htmx:afterSwap', (e) => {\n  if (e.detail.failed) return\n  if (e.detail.pathInfo.requestPath != '/htmx/checkout') return\n\n  const placeholder = document.getElementById('placeholder')\n  if (!placeholder) return\n\n  console.log(\"we will do some crazy stuff.\")\n\n})\n", "import AddressCheckbox from './AddressCheckbox'\n\nimport './index'\nimport './bag'\nimport './sneaker'\nimport './address'\nimport './checkout'\nimport './address_selector'\n\ncustomElements.define(\"address-checkbox\", AddressCheckbox)\n"],
  "mappings": "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",
  "names": ["AddressCheckbox", "checked", "afterOnLoad", "defaultAddress", "e", "checkbox", "address", "e", "search", "label", "listener", "e", "e", "placeholder", "clear", "close", "div", "images", "i", "image", "clickHandler", "timeout", "e", "element", "products", "section", "e", "AddressCheckbox"]
}
